sudo apt-get install nodejs (Not the latest version)
node * to run
__________ -Basic server-
var http = require("http");

http.createServer(function(req, res) {
  console.log("Request received.");
  res.writeHead(200, {"Content-Type": "text/plain"});
  res.write("Hello world!");
  res.end();
}).listen(5000,"127.0.0.1");

console.log("Server has started.");
__________ -Make it into a module-
var start = function(){
    http.createServer(function(req, res) {
        console.log("Request received.");
        res.writeHead(200, {"Content-Type": "text/plain"});
        res.write("Hello world!");
        res.end();
    }).listen(5000,"127.0.0.1");
    console.log("Server has started.");
};

exports.start = start;

* Index.js *
var server = require("./server");

server.start();
__________ -Add to get pathname for routing-
* Add *
var url = require("url");

var path = url.parse(request.url).pathname;
console.log(path);
__________ -Simple routing for game-
* Add *
var fs = require('fs');
var sys = require('sys');

var routes = {
    "/test" : "index.html",
    "/orbit.js" : "orbit.js"
};

var route = function(path,res,f){
    res.writeHead(200, {"Content-Type": "text/html"});
    if (path in routes){
        fs.readFile(routes[path], {encoding: "utf-8"}, function(err,data){
            console.log(data);
            res.write(data);
            res.end();
        });
    }else{
        res.write("Hello world!");
        res.end();
    };
};

var start = function(){
    http.createServer(function(req, res) {
        console.log("Request received.");
        var pathname = url.parse(req.url).pathname;
        route(pathname,res);
    }).listen(5000,"127.0.0.1");
    console.log("Server has started.");
};
_________ -Template functions for use in other js files- * Do not write the following in class, just open as new file *

var routes = { }; //container that holds routes and respective functions

var staticFiles = {"orbit.js":"", "index.html":""}; //static files named here

//reads text from file
var template = function(path){
    return fs.readFileSync(path, "utf-8");
};

//registers a function to a route
var addRoute = function(path,f){
    routes[path] = f;
};

//writes text to site as html
var getHtml = function(data,res){
    res.writeHead(200, {"Content-Type": "text/html"});
    res.write(data);
    res.end();
};

//writes text to site as plain text
var getText = function(data,res){
    res.writeHead(200, {"Content-Type": "text/plain"});
    res.write(data);
    res.end();
};

//runs route function if path is a route, returns text if path is a static file, and returns 'route not found' if path does not lead anywhere
var route = function(path,res){
    if (path in routes){
        getHtml(routes[path](),res);
    }else if (path.slice(1) in staticFiles){
        getText(template(path.slice(1)),res);
    }else{
        res.writeHead(200,{"Content-Type": "text/plain"});
        res.write("Route not found");
        res.end();
    };
};

//starts the server up and routes requests
var start = function(){
    http.createServer(function(req, res) {
        console.log("Request received.");
        var pathname = url.parse(req.url).pathname;
        route(pathname,res);
    }).listen(5000,"127.0.0.1");
    console.log("Server has started.");
};

//export for use in another js file
exports.start = start;
exports.addRoute = addRoute;
exports.template = template;
