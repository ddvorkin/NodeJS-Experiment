sudo apt-get install nodejs (Not the latest version)
node * to run
__________ -Basic server-
var http = require("http");

http.createServer(function(req, res) {
  console.log("Request received.");
  res.writeHead(200, {"Content-Type": "text/plain"});
  res.write("Hello world!");
  res.end();
}).listen(5000,"127.0.0.1");

console.log("Server has started.");
__________ -Add to get pathname for routing-
* Add *
var url = require("url");

var path = url.parse(request.url).pathname;
console.log(path);
__________ -Simple routing example-
var route = function(path,res){
    if (path == "/about"){
        res.writeHead(200,{"Content-Type": "text/plain"});
        res.write("About page");
        res.end();
    }else{
        res.writeHead(200,{"Content-Type": "text/plain"});
        res.write("Other pages");
        res.end();
    };
};

http.createServer(function(req, res) {
    console.log("Request received.");
    var pathname = url.parse(req.url).pathname;
    route(pathname,res);
}).listen(5000,"127.0.0.1");
console.log("Server has started.");
_________ -Express JS, an already prebuilt Node web framework-
Terminal: npm install express

var express = require('express');
var app = express();
var http = require('http').Server(app);

//required to render static files in base directory
app.use(express.static(__dirname + "/static"));

//route / to display index.html
app.get('/',function(req,res){
    res.render('index.html');
});

//run on 127.0.0.1:5000
http.listen(5000, function(){
    console.log("Server started on port 5000");
});
_________ -Getting with Express JS-


_________ -Socket.Io-
Terminal: npm install socket.io

* Add into index.js * 
var io = require('socket.io')(http); [Top]

io.on('connection', function(socket){ [Below app.get]
    console.log('A user connected');
    socket.on('disconnect', function(){
        console.log('User disconnected');
    });
});

_________ -Relaying message-

io.on('connection', function(socket){
    console.log('A user connected');
    socket.on('msg', function(msg){
        console.log('message: ' + msg);
    });
    socket.on('disconnect', function(){
        console.log('User disconnected');
    });
});

* At bottom, below buttons in html *

  <script src="/socket.io/socket.io.js"></script>
  <script>
   var field = document.getElementById("messages");  
   var socket = io();
   var button = document.getElementById("s");
   var text = document.getElementById("t");
   button.addEventListener("click",function(e){
       socket.emit("msg",text.value);
   });
  </script>

_________ -Realtime messaging-
* Add in js io*
    console.log('A user connected');   
    socket.on('msg', function(msg){
        io.emit("msg", msg);
        console.log('message: ' + msg);
    });

* Add in html *
     var socket = io();
     socket.on("msg",function(msg){
       field.innerHTML = field.innerHTML + "<li>" + msg + "</li>";
     });
